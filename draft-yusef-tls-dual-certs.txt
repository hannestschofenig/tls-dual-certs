



Network Working Group                                     R. Shekh-Yusef
Internet-Draft                                                     Ciena
Intended status: Standards Track                           H. Tschofenig
Expires: 19 November 2025                                          H-BRS
                                                             18 May 2025


    Post-Quantum Traditional (PQ/T) Hybrid Authentication with Dual
                        Certificates in TLS 1.3
                   draft-yusef-tls-dual-certs-latest

Abstract

   tbd

About This Document

   This note is to be removed before publishing as an RFC.

   Status information for this document may be found at
   https://datatracker.ietf.org/doc/draft-yusef-tls-dual-certs/.

   Discussion of this document takes place on the TLS Working Group
   mailing list (mailto:tls@ietf.org), which is archived at
   https://datatracker.ietf.org/wg/tls/about/.  Subscribe at
   https://www.ietf.org/mailman/listinfo/tls/.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 19 November 2025.

Copyright Notice

   Copyright (c) 2025 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  Flags Extension
   4.  Certificate Extension
   5.  IANA Considerations
   6.  Security Considerations
   7.  References
     7.1.  Normative References
     7.2.  Informative References
   Appendix A.  Design Alternatives
     A.1.  Certificate Design
       A.1.1.  Certificate Message Extension
       A.1.2.  Separate Certificate Entries
     A.2.  CertificateVerify Message Design
   Appendix B.  Acknowledgments
   Authors' Addresses

1.  Introduction

   There are several potential mechanisms to address concerns related to
   the anticipated emergence of cryptographically relevant quantum
   computers (CRQCs).  While the encryption-related aspects are covered
   in other documents, this document focuses on the authentication
   component of the TLS 1.3 handshake [RFC9261].

   One approach is the use of dual certificates: issuing two distinct
   certificates for the same end entity â€” one using a traditional
   algorithm (e.g., ECDSA), and the other using a post-quantum (PQ)
   algorithm (e.g., ML-DSA).

   This document defines how TLS 1.3 can utilize such certificates to
   enable dual-algorithm authentication, ensuring that an attacker would
   need to break both algorithms to compromise the session.

   It also addresses the challenges of integrating hybrid authentication
   in TLS 1.3 while balancing backward compatibility, forward security,
   and deployment practicality.

   This document makes changes to the Certificate and CertificateVerify
   messages to take advantage of both certificates when authenticating
   the end entity.

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  Flags Extension

   This specification uses the tls_flags extension defined in
   [I-D.ietf-tls-tlsflags] to allow a client and a server to negotiate
   support for this extension.

   The dual_cert_support flag is assigned the value (TBD1) and is used
   in the ClientHello (CH) and the ServerHello (SH).

   If the client supports the dual_cert_support extension it can express
   support for it in the flags extension of the ClientHello message.

   If the server supports the extension, it includes the
   dual_cert_support extension in the ServerHello message.  If the
   server does not support this extension or prefers not to use it, it
   proceeds without setting the flag.

   If both client and server support dual certificates, the Certificate
   message includes both the traditional and PQ certificates.  The
   certificates can be included as separate entries or as a composite
   certificate.  The CertificateVerify message use parallel signatures
   (one for each certificate).

4.  Certificate Extension

   Structure of this message:

    enum {
            X509(0),
            RawPublicKey(2),
            (255)
    } CertificateType;

    struct {
            select (certificate_type) {
                    case RawPublicKey:
                          /* From RFC 7250 ASN.1_subjectPublicKeyInfo */
                          opaque ASN1_subjectPublicKeyInfo<1..2^24-1>;

                    case X509:
                          opaque cert_data<1..2^24-1>;
            };
            Extension extensions<0..2^16-1>;
    } CertificateEntry;

    struct {
            opaque certificate_request_context<0..2^8-1>;
            CertificateEntry certificate_list<0..2^24-1>;
            opaque pq_certificate_request_context<0..2^8-1>;
            CertificateEntry pq_certificate_list<0..2^24-1>;
    } Certificate;

   This document allows for more than one CertificateEntry in the
   Certificate structure.

   NOTE: Discuss the size impact of including two certificates, instead
   of one.  Maybe in such cases, the end entity should only include the
   leaf certificate, and not include the issuer and root CA
   certificates.

5.  IANA Considerations

   tbd

6.  Security Considerations

   tbd

7.  References

7.1.  Normative References

   [I-D.ietf-tls-tlsflags]
              Nir, Y., "A Flags Extension for TLS 1.3", Work in
              Progress, Internet-Draft, draft-ietf-tls-tlsflags-15, 15
              March 2025, <https://datatracker.ietf.org/doc/html/draft-
              ietf-tls-tlsflags-15>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

   [RFC8446]  Rescorla, E., "The Transport Layer Security (TLS) Protocol
              Version 1.3", RFC 8446, DOI 10.17487/RFC8446, August 2018,
              <https://www.rfc-editor.org/rfc/rfc8446>.

7.2.  Informative References

   [RFC9261]  Sullivan, N., "Exported Authenticators in TLS", RFC 9261,
              DOI 10.17487/RFC9261, July 2022,
              <https://www.rfc-editor.org/rfc/rfc9261>.

Appendix A.  Design Alternatives

   There are several approaches for conveying two certificate chains and
   demonstrating possession of the corresponding private keys.

   The approaches outlined below assume two distinct certificate-based
   authentication exchanges during the TLS handshake.  An alternative
   mechanism is the use of Exported Authenticators, as defined in RFC
   9261, which enables the use of one certificate during the initial
   handshake and a second certificate after the handshake has completed.

   RFC 9261 [RFC9261] relies on the application-layer protocol to carry
   the Certificate, CertificateVerify, and Finished messages outside the
   initial handshake.  Unlike the post-handshake authentication
   mechanism defined in TLS 1.3, RFC 9261 supports mutual
   authentication, allowing both client and server to authenticate after
   the handshake.

A.1.  Certificate Design

A.1.1.  Certificate Message Extension

   Utilize the existing Certificate message extensions to carry
   additional certificates.  Define a new pq_certificate extension to
   carry the post-quantum certificate.

   This extension can be included in the extensions field of the
   CertificateEntry structure:

   struct {
           ExtensionType extension_type;
           opaque pq_certificate<1..2^24-1>;
   } PQCertificateExtension;

A.1.2.  Separate Certificate Entries

   Use the existing Certificate structure to include both traditional
   and PQ certificates as separate entries within the certificate_list:

   Each CertificateEntry can carry either a traditional certificate or a
   PQ certificate.  The extensions field within CertificateEntry can be
   used to indicate the type of certificate (e.g., traditional or PQ).

A.2.  CertificateVerify Message Design

   As an alternative to the current design, the use of a Composite
   Signature is possible.  This approach requires registering new
   cryptographic algorithm - one for each desireable combination.  The
   benefit of this approach is the ease of integration into an existing
   implementation since the structure of the message remains unchanged.

   struct {
           SignatureScheme algorithm;
           opaque signature<0..2^16-1>;
   } CertificateVerify;

Appendix B.  Acknowledgments

   We would like to thank xyz.

Authors' Addresses

   Rifaat Shekh-Yusef
   Ciena
   Canada
   Email: rifaat.s.ietf@gmail.com


   Hannes Tschofenig
   University of Applied Sciences Bonn-Rhein-Sieg
   Germany
   Email: Hannes.Tschofenig@gmx.net
